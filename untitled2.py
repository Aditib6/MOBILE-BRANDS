# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Vr8RnvTjHVwwHor5ZZ1r0vxR7P8ILCCn
"""

from google.colab import files
uploaded = files.upload()

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import missingno as msno

data_mobile = pd.read_csv("/content/newshop_mobile_sales - Sheet1.csv")

#data_mobile=pd.read_csv("mobile_sales.csv")
data_mobile.head()

data_mobile.rename(columns={"Selling Price": "Selling Price (INR)", "Original Price((0.1* Selling Price+ Selling Price)": "Original Price (INR)"}, inplace=True)

data_mobile.head()

data_mobile.info()

data_mobile.shape

data_mobile.isnull().sum()

data_mobile.head()

data_mobile.tail()

data_mobile['Brand'].groupby(data_mobile['Brand']).count().sort_values(ascending=False)

data_mobile['Brand'].groupby(data_mobile['Memory']).count().sort_values(ascending=False)

data_mobile['Brand'].groupby(data_mobile['Model']).count().sort_values(ascending=False)

sns.set_style("white")
sns.pairplot(data_mobile, hue='Brand')

sns.displot(data_mobile, x='Selling Price (INR)',bins=[5000,10000,15000,20000,25000,30000,35000,40000,50000,60000,80000], aspect=1.2,color='#fd6c9e')
sns.displot(data_mobile, x='Original Price',bins=[5000,10000,15000,20000,25000,30000,35000,40000,50000,60000,80000], aspect=1.2,color='#ff8243')

#brandwise mobile phone price segments
sns.displot(data_mobile, x='Selling Price (INR)',bins=5, hue='Brand',aspect=1.2)

fig, ax = plt.subplots(figsize=(15,3))
ax=sns.countplot(x="Brand", data=data_mobile)

# Brandwise Mean Selling prices
data_mobile.groupby('Brand')['Selling Price (INR)'].mean().sort_values(ascending=False)

##Top 10 most smartphone selling Brand in India
grouping_brands = data_mobile["Brand"].value_counts(ascending=False)[0:10].reset_index()
grouping_brands.columns = ["Brand", "Selling Values"]
grouping_brands

top_rated_ten_phones = data_mobile.sort_values(by=["Rating"], ascending=False)[:10]
top_rated_ten_phones

##Most common specs offered by various brands
Memory = data_mobile["Memory"].value_counts(ascending=False).reset_index()
Storage = data_mobile["Storage"].value_counts(ascending=False).reset_index()
Memory[0:1], Storage[0:1]

##Top 10 Most commonly offered colors by all Brands
Colour = data_mobile["Color"].value_counts(ascending=False)[0:11].reset_index()
Colour.columns = ["Colour", "Units"]
Colour

plt.figure(figsize=(10,6))
sns.barplot(x=top_rated_ten_phones.Model, y=data_mobile.Rating)
plt.title("Top Rated 10 Phones", size=15)
plt.show()

plt.figure(figsize=(13,6))
sns.barplot(x=data_mobile.Brand, y=data_mobile["Selling Price (INR)"])
plt.title("Selling Price of Brands", size=15)
plt.show()

plt.figure(figsize=(10,8))
sns.heatmap(data_mobile.corr(), annot=True, cmap="RdBu")
plt.show()

comparing_by_specs1 = data_mobile[(data_mobile["Brand"] == "xamxung")]
comparing_by_specs2 = data_mobile[(data_mobile["Brand"] == "Maple")]
comparing_by_specs = pd.concat([comparing_by_specs1, comparing_by_specs2])
comparing_by_specs

comparing_by_specs1 = data_mobile[(data_mobile["Brand"] == "OHNO")]
comparing_by_specs2 = data_mobile[(data_mobile["Brand"] == "KOKO")]
comparing_by_specs = pd.concat([comparing_by_specs1, comparing_by_specs2])
comparing_by_specs

##Top 10 Rated Phones
phone_rating = data_mobile.sort_values(by=["Rating"], ascending=False)[:40]
phone_rating.groupby("Model").mean()

sns.catplot(x="Model", y="Rating", kind="bar", data=phone_rating, height=6, aspect=2.5)

sns.kdeplot(data = data_mobile, x="Rating")

a=[]
for col in data_mobile.columns:
  a.append(col)
  sns.kdeplot(data = data_mobile, x="col")

for col in data_mobile.columns:
    print(col)

data2 = data_mobile.drop(labels = ['Selling Price (INR)', 'Original Price', 'Model', 'Brand', 'Memory'], axis =1) 
data2.head()

df = data2.melt(['Color'], var_name='cols',  value_name='vals')
df

